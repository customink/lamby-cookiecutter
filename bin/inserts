#!/bin/sh
set -e

echo "== Insert Supporting Lamby Changes =="

PROJECT_FOLDER="{{cookiecutter.project_name}}"
cd $PROJECT_FOLDER

insert_file_over_pattern () {
  dline=$(sed -n "/${2}/=" $1)
  rline=$(expr $dline - 1)
  sed --in-place -e "${dline}d" $1
  sed --in-place "${rline}r ../inserts/${1}" $1
}

# We are leaning into dev containers. More: https://containers.dev
#
cp -r ../inserts/.devcontainer .

# Replace RenameMe|rename_me with cookiecutter's name.
#
sed --in-place \
  's/RenameMe/{% include "_cctmp\/class_name.txt" %}/' \
  config/application.rb
sed --in-place \
  's/rename_me_production/{% include "_cctmp\/dash_name.txt" %}-production/' \
  config/cable.yml
sed --in-place \
  's/rename_me_production/{% include "_cctmp\/dash_name.txt" %}-production/' \
  config/environments/production.rb

# Create a simple welcome to Lamby/Rails index page. To do
# this we need a simple starter route, view layout and template.
# One important part of this is exercising the JS/CSS assets.
#
cp ../inserts/config/routes.rb config/routes.rb
cp ../inserts/app/views/layouts/application.html.erb app/views/layouts/application.html.erb
mkdir -p app/views/application
cp ../inserts/app/views/application/index.html.erb app/views/application/index.html.erb

# Much like Heroku, most Rails applications can serve static
# assets without the complexity of an S3-backed asset host.
# The later is recommended as your site grows since it maintains
# old files (like images) to always be present at the origin.
# This addition to production environment file will allow Lamby
# to service static assets that are Base64 encoded with cache
# control headers like max-age set. This addition also sets:
#
# - Enables the Lograge gem to reduce CloudWatch noise/costs.
# - Lograge's initializer uses JSON for CloudWatch Logs INSIGHTS.
#
insert_file_over_pattern 'config/environments/production.rb' '^end'

# Few additions to .gitignore for:
#
# - SAM's `.aws-sam` build dir.
# - Encourage Dotenv best practices. Ex: Use `.env.development.local`.
# - Lamby leverages Docker and we build gems into `vendor/bundle`
#
cat ../inserts/.gitignore >> ./.gitignore

# Put in a nice README. Please keep this file somewhat in sync with
# the root README for details like what this project has installed.
#
cp ../inserts/README.md README.md
